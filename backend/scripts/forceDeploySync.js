// ============================================================================
// üö® FORCE DEPLOY SYNC - Verificar y forzar sincronizaci√≥n con GitHub
// ============================================================================

const fs = require('fs');
const path = require('path');

console.log('üö® FORCE DEPLOY SYNC SCRIPT');
console.log('=' + '='.repeat(50));

// Verificar archivos cr√≠ticos MCP
const criticalFiles = [
  'backend/services/mcp/functionCallingService.js',
  'backend/services/mcp/mcpIntegrationService.js',
  'backend/services/mcp/calendarService.js',
  'backend/routes/crmWebhook.js'
];

console.log('\nüìÅ VERIFICANDO ARCHIVOS CR√çTICOS:');
criticalFiles.forEach(file => {
  if (fs.existsSync(file)) {
    console.log(`‚úÖ ${file} - EXISTE`);
  } else {
    console.log(`‚ùå ${file} - NO EXISTE`);
  }
});

// Verificar imports espec√≠ficos
console.log('\nüîç VERIFICANDO IMPORTS ESPEC√çFICOS:');

try {
  const mcpIntegrationContent = fs.readFileSync('backend/services/mcp/mcpIntegrationService.js', 'utf8');

  if (mcpIntegrationContent.includes("require('./functionCallingService')")) {
    console.log('‚úÖ mcpIntegrationService.js tiene import correcto: ./functionCallingService');
  } else if (mcpIntegrationContent.includes("require('./mcp/functionCallingService')")) {
    console.log('‚ùå mcpIntegrationService.js tiene import INCORRECTO: ./mcp/functionCallingService');
    console.log('üîß NECESITA CORRECCI√ìN');
  } else {
    console.log('‚ö†Ô∏è mcpIntegrationService.js - import no encontrado');
  }

} catch (error) {
  console.log('‚ùå Error leyendo mcpIntegrationService.js:', error.message);
}

try {
  const crmWebhookContent = fs.readFileSync('backend/routes/crmWebhook.js', 'utf8');

  if (crmWebhookContent.includes("require('../services/mcp/mcpIntegrationService')")) {
    console.log('‚úÖ crmWebhook.js tiene import correcto: ../services/mcp/mcpIntegrationService');
  } else {
    console.log('‚ùå crmWebhook.js - import incorrecto o no encontrado');
  }

} catch (error) {
  console.log('‚ùå Error leyendo crmWebhook.js:', error.message);
}

console.log('\nüéØ RESUMEN:');
console.log('Si todos los imports est√°n correctos pero Render falla:');
console.log('1. Problema de cach√© en Render');
console.log('2. Diferencia entre GitHub y local');
console.log('3. Necesario force push o commit vac√≠o');

console.log('\n‚úÖ VERIFICACI√ìN COMPLETADA');
console.log('Timestamp: ' + new Date().toISOString());