generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String     @id @default(cuid())
  email         String     @unique
  password      String
  name          String?
  role          String     @default("user")
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  planType      String     @default("free")
  planExpiry    DateTime?
  messagesUsed  Int        @default(0)
  messagesLimit Int        @default(10)
  apiKeys       ApiKey[]
  campaigns           Campaign[]
  payments            Payment[]
  templates           Template[]
  passwordResets      PasswordReset[]
  whatsappTemplates   WhatsAppTemplate[]
  whatsappCampaigns   WhatsAppCampaign[]

  @@map("users")
}

model Campaign {
  id            String       @id @default(cuid())
  name          String
  templateId    String?
  status        String       @default("draft")
  totalContacts Int          @default(0)
  sentCount     Int          @default(0)
  errorCount    Int          @default(0)
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  sentAt        DateTime?
  userId        String
  template      Template?    @relation(fields: [templateId], references: [id])
  user          User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  messages      MessageLog[]

  @@map("campaigns")
}

model Template {
  id               String     @id @default(cuid())
  name             String
  content          String
  category         String     @default("general")
  variables        String[]
  status           String     @default("ai_pending")
  isPublic         Boolean    @default(false)
  aiApproved       Boolean    @default(false)
  aiScore          Int?
  aiReasons        String[]
  aiSuggestions    String[]
  twilioTemplateId String?
  twilioSid        String?
  adminReviewedBy  String?
  adminReviewedAt  DateTime?
  adminNotes       String?
  usageCount       Int        @default(0)
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt
  userId           String?
  campaigns        Campaign[]
  user             User?      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("templates")
}

model MessageLog {
  id          String    @id @default(cuid())
  phone       String
  status      String
  messageSid  String?
  error       String?
  sentAt      DateTime  @default(now())
  deliveredAt DateTime?
  readAt      DateTime?
  campaignId  String
  campaign    Campaign  @relation(fields: [campaignId], references: [id], onDelete: Cascade)

  @@map("message_logs")
}

model Payment {
  id                 String    @id @default(cuid())
  reference          String    @unique
  amount             Float
  currency           String    @default("COP")
  status             String
  wompiTransactionId String?   @unique
  planType           String
  processedAt        DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  userId             String
  user               User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("payments")
}

model ApiKey {
  id        String    @id @default(cuid())
  key       String    @unique
  name      String
  isActive  Boolean   @default(true)
  createdAt DateTime  @default(now())
  lastUsed  DateTime?
  userId    String
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("api_keys")
}

model PasswordReset {
  id        String   @id @default(cuid())
  token     String   @unique
  email     String
  expiresAt DateTime
  used      Boolean  @default(false)
  createdAt DateTime @default(now())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("password_resets")
}

// WhatsApp Business Templates Aprobados por Meta
model WhatsAppTemplate {
  id               String   @id @default(cuid())
  name             String   // Nombre del template en Meta
  category         String   @default("UTILITY") // MARKETING, UTILITY, AUTHENTICATION
  language         String   @default("es") // Idioma del template
  status           String   @default("PENDING") // PENDING, APPROVED, REJECTED, DISABLED
  
  // Contenido del template
  headerText       String? // Header si aplica
  bodyText         String  // Cuerpo principal con {{1}}, {{2}}
  footerText       String? // Footer si aplica
  
  // Metadata
  variablesCount   Int      @default(0) // Número de variables {{1}}, {{2}}, etc.
  variablesMapping Json?    // {"1": "nombre", "2": "fecha", "3": "hora"}
  
  // Twilio Integration
  twilioContentSid String?  @unique // SID del Content Template de Twilio
  
  // Tracking
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  createdBy        String?
  creator          User?    @relation(fields: [createdBy], references: [id], onDelete: SetNull)
  
  // Relations
  campaigns        WhatsAppCampaign[]
  
  @@unique([name, language])
  @@map("whatsapp_templates")
}

// Configuración global de WhatsApp
model WhatsAppConfig {
  id                    String   @id @default(cuid())
  twilioAccountSid      String
  twilioAuthToken       String   // Encriptado
  whatsappNumber        String
  businessAccountId     String?  // Meta Business Account ID
  
  // Configuración por defecto
  rateLimitPerMinute    Int      @default(20)
  isActive              Boolean  @default(true)
  
  // Metadata
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
  
  @@map("whatsapp_config")
}

// Campaigns usando WhatsApp Templates
model WhatsAppCampaign {
  id                String           @id @default(cuid())
  name              String
  templateId        String
  template          WhatsAppTemplate @relation(fields: [templateId], references: [id], onDelete: Cascade)
  
  // Variables mapping para CSV
  csvVariableMapping Json             // {"1": "column_name", "2": "other_column"}
  defaultValues      Json?            // Valores por defecto para variables faltantes
  
  // Campaign status
  status            String           @default("draft") // draft, scheduled, sending, completed, failed
  totalContacts     Int              @default(0)
  sentCount         Int              @default(0)
  errorCount        Int              @default(0)
  
  // Timing
  scheduledAt       DateTime?
  startedAt         DateTime?
  completedAt       DateTime?
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt
  
  // Relations
  userId            String
  user              User             @relation(fields: [userId], references: [id], onDelete: Cascade)
  messages          WhatsAppMessage[]
  
  @@map("whatsapp_campaigns")
}

// Logs de mensajes enviados con WhatsApp Templates
model WhatsAppMessage {
  id                String           @id @default(cuid())
  campaignId        String
  campaign          WhatsAppCampaign @relation(fields: [campaignId], references: [id], onDelete: Cascade)
  
  // Message details
  phoneNumber       String
  messageSid        String?          // Twilio Message SID
  status            String           @default("queued") // queued, sent, delivered, failed, undelivered
  errorCode         String?
  errorMessage      String?
  
  // Template variables used
  variablesUsed     Json             // Variables reales enviadas
  
  // Timing
  sentAt            DateTime         @default(now())
  deliveredAt       DateTime?
  updatedAt         DateTime         @updatedAt
  
  @@map("whatsapp_messages")
}
